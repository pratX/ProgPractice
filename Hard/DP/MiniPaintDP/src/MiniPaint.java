/**
 * Created by pratikku on 2/9/15.
 */
public class MiniPaint {
    private static int[] doStr(String str, int maxStrokes){
        int[][] misPaints = new int[str.length()][maxStrokes+1];
        //Column: max number of strokes
        //Initialize
        misPaints[0][0] = 1;
        for(int i=1; i<str.length(); ++i){
            misPaints[i][0] = misPaints[i-1][0]+1;
            for(int j=1; j<maxStrokes; ++j){
                int min = misPaints[i][0];
                int countW=0;
                int countB=0;
                for(int k=1; k<=i; ++k){
                    if(str.charAt(i-(k-1)) == 'W')
                        ++countW;
                    else
                        ++countB;
                    if(min > (Math.min(countB, countW)+misPaints[i-k][j-1])){
                        min = Math.min(countB, countW)+misPaints[i-k][j-1];
                    }
                }
                if(str.charAt(0) == 'W')
                    ++countW;
                else
                    ++countB;

                if(min > Math.min(countB, countW)){
                    min = Math.min(countB, countW);
                }

                misPaints[i][j] = min;
                if(misPaints[i][j] == 0)
                    break;
            }
        }

        return misPaints[str.length()-1];
    }

    public static int leastBad(String[] picture, int maxStrokes){
        int[][] misPaints = new int[picture.length][maxStrokes+1];
        misPaints[0] = doStr(picture[0], maxStrokes);
        for(int i=1; i<picture.length; ++i){
            int[] mP = doStr(picture[i], maxStrokes);
            for(int j=0; j<=maxStrokes; ++j){
                int min = picture[i].length()+misPaints[i-1][0];
                for(int k=0; k<=j; ++k){
                    int tmP = mP[k]+misPaints[i-1][j-k];
                    if(tmP < min){
                        min = tmP;
                    }
                }
                misPaints[i][j] = min;
            }
        }

        return misPaints[picture.length-1][maxStrokes];
    }

    public static void main(String[] args){
        System.out.println(MiniPaint.leastBad(new String[] 	{"BWWBWBBBBWBWBBBWBBWBBWBWBWBWWWWWWWWBWBBBWBWBBWWWWB", "BBBWWBWWBBBWBBWWWWBWWBBBWWWWBBWWWWBWBBBBBBWBWBWBWW", "WBBWWBWWBWWWBBBBBBWWBBBWWBBBWWBBWWWWWWBWWBWWBBBWWB", "WBWWWWWWWBBBBBBBBWWWBWBWBWBWWBBBBBWWBBBWWBBWBWWBBB", "WBBBBBWBWWBBBWWWBWWBBBBBBWBWBBBBBBWWBBWWBBBBWWWWWW", "WBWBBBBWWWWBBWBWWBWWBBWBBBWWBWWBBWWWWBBBWBWWWBBBBW", "BBWBWWBBBBWBBBBWBWWBBWBBBWWBBWBBWWBWBWBBWBBWWBBWBW", "WBBWWBWWBWWWWBWBWBWWBBWWWBWBWWBBBBWWBBBWWBWWBBBBBB", "WBBBWWWWWBBBWWBBBWWBBBBBBBBBWWWBBBWBBWWWBWBWBBBWBB", "BBBBWWBWWBBBWBWWBBBBWBBBWBWWBBWBBBWWWWBBBWWWBBBBWW", "WWBWWWWBBWBBWBBWWWWBBWWBBWWBBWBWBWBWBBBBBWWBWBWWBB", "WBBWWBWBBBBWBWBWBBWBWWWBBBBWBBWBBBBBBBBBBBBBWWWBBB", "BBWWWWWWWWBWWWWBBWWBBWBWBWBWBBBBBWBBBWBBBBBWBWWBWB", "WWBWBBWWWBBBBWWBWBWBBWBBWWBWWBBWBWWWBBBBBWBBWBWBWB", "BWWWWBWBBWWBBWWWBBWBWBWWBWWWBBBBBBWWBWWBBBBWBWWBBB", "WBBWWWWBBWBWWWBBWWWWBWBBBWBBWWBBBBBBWWWBWWBWBBWBWB", "BWWBWBBBBBBBWBBWWBBWWBWWBWBWBWWWWBWWBBBBWWBBWWWWWW", "WBWWWWBBWWBWWBWBWWBBWWBBWWBBWWWBWBBWWWBBBWBBWWBWWW", "WWWWBWBBWBBWBBBWBWBBBBWWBWBBBBBBBBWBWWBWBWBWBWWWWW", "BWBBWWBWBBBBBWWWBBWWWBBWBWBWBBWBWWBWWBWBWWWWWBBBBB", "WBBWWBBWBBBBWWBBBBWWWWBBWBWWWBWBWBBBWWBWBBBWBBBWBB", "BWWBWBBBWWBBWWBWWWBBWBWBBBBBWWWBWWWWBBBWBWWBBBWWBB", "WBBWWBBWBWBWWWWWBWWBWWWBBBWWBBWWWBBWBBWWWWWWWWBBWB", "BBWWWWWWBBWWBWWBBWBWBBBBWWBWBBWBWBBBBWBWBWBBWWWWBW", "BBWWBWBWWBBBWBWBWBBBBBBBWWWWWBBWBBBWWWBBWWWBWWWWBB", "WWWWWWBWBWWWWWWBWBBBWBWBWBWWWWBWBBBBBWBWWBWWBWBWWW", "BWBWBBWWBBWBWWBBBBWBBBBBBWBWBWBBWBBBBBBBBWBWBWWWBW", "BBBWBBWBBWBWWWBBWWWBWWBWBBBBBWBBBWWWWWWWBWBBWWBBWW", "WBWWBWBBBWWWWWBBWWBBBWBBWBBBWBBWBWBWBWWWBBBWBWBWBW", "WBWBBBBWBBWWWWBBWWBWBBWBWBWBBWWWWWBBWBBBWBWWWWWWWB", "WBWBBBWBWBWBWBWBWWWBWBBWBWWWBWBWBBBBBBWWBBWBWBWWBW", "BBBWBWBBBWBBWBWBWWWBBBBWBBBWBWBWBWWBWWBBWWWBWBWWWB", "BBBBBWWWWWBWBWBBBBBWBWWBWBWWBBWBWBBBWBWBWBBWWBBBBB", "BWBBBBWWBBWBWWWBWBBBBWWWBBWWWWBWWBWWWBBBBWWBBWWBBW", "WBWWWBWWWWBBWBBWWBWBBWWWWWBBWBBWWBWWBBWWBBWWBWWBBB", "BWBWWWWBBBBWBBWBWBBBWWWBWBWWWBWBWWWBBWBWWBBBWWBBBB", "BBWBWBBWWBBWBWBWWWWBWBWWBWBBWWBBWWWWBBBBBBBWWBBBBW", "WBWBBWWWBWBBBWBBWWWWBWBWBWBWWBWWBWBWBWWBBWBBBWBBWW", "BWBBBBBWBWWWBBBBWWBBWWBWWWBBBBBBBWBWWBBBBWBWBBWWBB", "WWBWWBWWBBBBWBWBBBBBBWWBBWBWBWWBBWWBBWBBBBBWWWBBBW", "BWBWBWWBWWBWBBBWBWWWBWBWBWBBWWWBBWWWWWWWBBWBWBBWWW", "BWBBWBBWBWWWBBWWWBBWBBBBBBBBBBWWWWBBBBWBBWBWBBWBWB", "BBWWWWBBBBWWBBBWBWBBWBBWBBBBWBWWBWWBBWWWWBBWWBBBBW", "BBWWBBWBWBBBBWBBWBBWWWBBWBWBBBBWBBWWWWWWWWBWBBWBBW", "WBBBWWWWWBBWBWWWWBBWWWBBBWBBBBWWBBBBBWWBWBWBWBBBWB", "WBBBWWWBWBBWWWWWWBBBWBWBWWBBBBBBWBWWWWWWWWWWBWWWWB", "WBBBBWWBWBWBBBWBWBWWBWBWWWBBBBWWWWBWBBWWBWBBBWWWWB", "WWBBBWWWWBBBWBBBBWWBBBWBWBWBBBWWBWWBWBBWWBWWBBWBWW", "BWWBBBWBWWWWWWWBBBBBWBWBWBBBBBBWWWWWWBWBBBWWBWWBBB", "BWBBBBBWBWBBBBBBWWWWBWBBWBWBWBWWWWBWBWWWBWBBBBBWBW"}, 123));
    }
}
